import*as t from"@hotwired/turbo";import{connectStreamSource as e,disconnectStreamSource as n}from"@hotwired/turbo";export{t as Turbo};let i;async function s(){return i||o(r().then(o))}function o(t){return i=t}async function r(){const{createConsumer:t}=await Promise.resolve().then((function(){return $}));return t()}async function c(t,e){const{subscriptions:n}=await s();return n.create(t,e)}var u=Object.freeze({__proto__:null,getConsumer:s,setConsumer:o,createConsumer:r,subscribeTo:c});function a(t){return t&&"object"==typeof t?t instanceof Date||t instanceof RegExp?t:Array.isArray(t)?t.map(a):Object.keys(t).reduce((function(e,n){return e[n[0].toLowerCase()+n.slice(1).replace(/([A-Z]+)/g,(function(t,e){return"_"+e.toLowerCase()}))]=a(t[n]),e}),{}):t}class h extends HTMLElement{async connectedCallback(){e(this),this.subscription=await c(this.channel,{received:this.dispatchMessageEvent.bind(this),connected:this.subscriptionConnected.bind(this),disconnected:this.subscriptionDisconnected.bind(this)})}disconnectedCallback(){n(this),this.subscription&&this.subscription.unsubscribe()}dispatchMessageEvent(t){const e=new MessageEvent("message",{data:t});return this.dispatchEvent(e)}subscriptionConnected(){this.setAttribute("connected","")}subscriptionDisconnected(){this.removeAttribute("connected")}get channel(){return{channel:this.getAttribute("channel"),signed_stream_name:this.getAttribute("signed-stream-name"),...a({...this.dataset})}}}void 0===customElements.get("turbo-cable-stream-source")&&customElements.define("turbo-cable-stream-source",h),window.Turbo=t,addEventListener("turbo:before-fetch-request",(function(t){if(t.target instanceof HTMLFormElement){const{target:e,detail:{fetchOptions:n}}=t;e.addEventListener("turbo:submit-start",(({detail:{formSubmission:{submitter:t}}})=>{const i=function(t){return t instanceof FormData||t instanceof URLSearchParams}(n.body)?n.body:new URLSearchParams,s=function(t,e,n){const i=function(t){return t instanceof HTMLButtonElement||t instanceof HTMLInputElement?"_method"===t.name?t.value:t.hasAttribute("formmethod")?t.formMethod:null:null}(t),s=e.get("_method"),o=n.getAttribute("method")||"get";return"string"==typeof i?i:"string"==typeof s?s:o}(t,i,e);/get/i.test(s)||(/post/i.test(s)?i.delete("_method"):i.set("_method",s),n.method="post")}),{once:!0})}}));var l={logger:self.console,WebSocket:self.WebSocket},d={log(...t){this.enabled&&(t.push(Date.now()),l.logger.log("[ActionCable]",...t))}};const p=()=>(new Date).getTime(),b=t=>(p()-t)/1e3;class g{constructor(t){this.visibilityDidChange=this.visibilityDidChange.bind(this),this.connection=t,this.reconnectAttempts=0}start(){this.isRunning()||(this.startedAt=p(),delete this.stoppedAt,this.startPolling(),addEventListener("visibilitychange",this.visibilityDidChange),d.log(`ConnectionMonitor started. stale threshold = ${this.constructor.staleThreshold} s`))}stop(){this.isRunning()&&(this.stoppedAt=p(),this.stopPolling(),removeEventListener("visibilitychange",this.visibilityDidChange),d.log("ConnectionMonitor stopped"))}isRunning(){return this.startedAt&&!this.stoppedAt}recordPing(){this.pingedAt=p()}recordConnect(){this.reconnectAttempts=0,this.recordPing(),delete this.disconnectedAt,d.log("ConnectionMonitor recorded connect")}recordDisconnect(){this.disconnectedAt=p(),d.log("ConnectionMonitor recorded disconnect")}startPolling(){this.stopPolling(),this.poll()}stopPolling(){clearTimeout(this.pollTimeout)}poll(){this.pollTimeout=setTimeout((()=>{this.reconnectIfStale(),this.poll()}),this.getPollInterval())}getPollInterval(){const{staleThreshold:t,reconnectionBackoffRate:e}=this.constructor;return 1e3*t*Math.pow(1+e,Math.min(this.reconnectAttempts,10))*(1+(0===this.reconnectAttempts?1:e)*Math.random())}reconnectIfStale(){this.connectionIsStale()&&(d.log(`ConnectionMonitor detected stale connection. reconnectAttempts = ${this.reconnectAttempts}, time stale = ${b(this.refreshedAt)} s, stale threshold = ${this.constructor.staleThreshold} s`),this.reconnectAttempts++,this.disconnectedRecently()?d.log(`ConnectionMonitor skipping reopening recent disconnect. time disconnected = ${b(this.disconnectedAt)} s`):(d.log("ConnectionMonitor reopening"),this.connection.reopen()))}get refreshedAt(){return this.pingedAt?this.pingedAt:this.startedAt}connectionIsStale(){return b(this.refreshedAt)>this.constructor.staleThreshold}disconnectedRecently(){return this.disconnectedAt&&b(this.disconnectedAt)<this.constructor.staleThreshold}visibilityDidChange(){"visible"===document.visibilityState&&setTimeout((()=>{!this.connectionIsStale()&&this.connection.isOpen()||(d.log(`ConnectionMonitor reopening stale connection on visibilitychange. visibilityState = ${document.visibilityState}`),this.connection.reopen())}),200)}}g.staleThreshold=6,g.reconnectionBackoffRate=.15;var m=g,f={message_types:{welcome:"welcome",disconnect:"disconnect",ping:"ping",confirmation:"confirm_subscription",rejection:"reject_subscription"},disconnect_reasons:{unauthorized:"unauthorized",invalid_request:"invalid_request",server_restart:"server_restart",remote:"remote"},default_mount_path:"/cable",protocols:["actioncable-v1-json","actioncable-unsupported"]};const{message_types:S,protocols:v}=f,y=v.slice(0,v.length-1),A=[].indexOf;class w{constructor(t){this.open=this.open.bind(this),this.consumer=t,this.subscriptions=this.consumer.subscriptions,this.monitor=new m(this),this.disconnected=!0}send(t){return!!this.isOpen()&&(this.webSocket.send(JSON.stringify(t)),!0)}open(){if(this.isActive())return d.log(`Attempted to open WebSocket, but existing socket is ${this.getState()}`),!1;{const t=[...v,...this.consumer.subprotocols||[]];return d.log(`Opening WebSocket, current state is ${this.getState()}, subprotocols: ${t}`),this.webSocket&&this.uninstallEventHandlers(),this.webSocket=new l.WebSocket(this.consumer.url,t),this.installEventHandlers(),this.monitor.start(),!0}}close({allowReconnect:t}={allowReconnect:!0}){if(t||this.monitor.stop(),this.isOpen())return this.webSocket.close()}reopen(){if(d.log(`Reopening WebSocket, current state is ${this.getState()}`),!this.isActive())return this.open();try{return this.close()}catch(t){d.log("Failed to reopen WebSocket",t)}finally{d.log(`Reopening WebSocket in ${this.constructor.reopenDelay}ms`),setTimeout(this.open,this.constructor.reopenDelay)}}getProtocol(){if(this.webSocket)return this.webSocket.protocol}isOpen(){return this.isState("open")}isActive(){return this.isState("open","connecting")}triedToReconnect(){return this.monitor.reconnectAttempts>0}isProtocolSupported(){return A.call(y,this.getProtocol())>=0}isState(...t){return A.call(t,this.getState())>=0}getState(){if(this.webSocket)for(let t in l.WebSocket)if(l.WebSocket[t]===this.webSocket.readyState)return t.toLowerCase();return null}installEventHandlers(){for(let t in this.events){const e=this.events[t].bind(this);this.webSocket[`on${t}`]=e}}uninstallEventHandlers(){for(let t in this.events)this.webSocket[`on${t}`]=function(){}}}w.reopenDelay=500,w.prototype.events={message(t){if(!this.isProtocolSupported())return;const{identifier:e,message:n,reason:i,reconnect:s,type:o}=JSON.parse(t.data);switch(o){case S.welcome:return this.triedToReconnect()&&(this.reconnectAttempted=!0),this.monitor.recordConnect(),this.subscriptions.reload();case S.disconnect:return d.log(`Disconnecting. Reason: ${i}`),this.close({allowReconnect:s});case S.ping:return this.monitor.recordPing();case S.confirmation:return this.subscriptions.confirmSubscription(e),this.reconnectAttempted?(this.reconnectAttempted=!1,this.subscriptions.notify(e,"connected",{reconnected:!0})):this.subscriptions.notify(e,"connected",{reconnected:!1});case S.rejection:return this.subscriptions.reject(e);default:return this.subscriptions.notify(e,"received",n)}},open(){if(d.log(`WebSocket onopen event, using '${this.getProtocol()}' subprotocol`),this.disconnected=!1,!this.isProtocolSupported())return d.log("Protocol is unsupported. Stopping monitor and disconnecting."),this.close({allowReconnect:!1})},close(t){if(d.log("WebSocket onclose event"),!this.disconnected)return this.disconnected=!0,this.monitor.recordDisconnect(),this.subscriptions.notifyAll("disconnected",{willAttemptReconnect:this.monitor.isRunning()})},error(){d.log("WebSocket onerror event")}};var C=w;class k{constructor(t,e={},n){this.consumer=t,this.identifier=JSON.stringify(e),function(t,e){if(null!=e)for(let n in e){const i=e[n];t[n]=i}}(this,n)}perform(t,e={}){return e.action=t,this.send(e)}send(t){return this.consumer.send({command:"message",identifier:this.identifier,data:JSON.stringify(t)})}unsubscribe(){return this.consumer.subscriptions.remove(this)}}var _=class{constructor(t){this.subscriptions=t,this.pendingSubscriptions=[]}guarantee(t){-1==this.pendingSubscriptions.indexOf(t)?(d.log(`SubscriptionGuarantor guaranteeing ${t.identifier}`),this.pendingSubscriptions.push(t)):d.log(`SubscriptionGuarantor already guaranteeing ${t.identifier}`),this.startGuaranteeing()}forget(t){d.log(`SubscriptionGuarantor forgetting ${t.identifier}`),this.pendingSubscriptions=this.pendingSubscriptions.filter((e=>e!==t))}startGuaranteeing(){this.stopGuaranteeing(),this.retrySubscribing()}stopGuaranteeing(){clearTimeout(this.retryTimeout)}retrySubscribing(){this.retryTimeout=setTimeout((()=>{this.subscriptions&&"function"==typeof this.subscriptions.subscribe&&this.pendingSubscriptions.map((t=>{d.log(`SubscriptionGuarantor resubscribing ${t.identifier}`),this.subscriptions.subscribe(t)}))}),500)}};class T{constructor(t){this.consumer=t,this.guarantor=new _(this),this.subscriptions=[]}create(t,e){const n="object"==typeof t?t:{channel:t},i=new k(this.consumer,n,e);return this.add(i)}add(t){return this.subscriptions.push(t),this.consumer.ensureActiveConnection(),this.notify(t,"initialized"),this.subscribe(t),t}remove(t){return this.forget(t),this.findAll(t.identifier).length||this.sendCommand(t,"unsubscribe"),t}reject(t){return this.findAll(t).map((t=>(this.forget(t),this.notify(t,"rejected"),t)))}forget(t){return this.guarantor.forget(t),this.subscriptions=this.subscriptions.filter((e=>e!==t)),t}findAll(t){return this.subscriptions.filter((e=>e.identifier===t))}reload(){return this.subscriptions.map((t=>this.subscribe(t)))}notifyAll(t,...e){return this.subscriptions.map((n=>this.notify(n,t,...e)))}notify(t,e,...n){let i;return i="string"==typeof t?this.findAll(t):[t],i.map((t=>"function"==typeof t[e]?t[e](...n):void 0))}subscribe(t){this.sendCommand(t,"subscribe")&&this.guarantor.guarantee(t)}confirmSubscription(t){d.log(`Subscription confirmed ${t}`),this.findAll(t).map((t=>this.guarantor.forget(t)))}sendCommand(t,e){const{identifier:n}=t;return this.consumer.send({command:e,identifier:n})}}class R{constructor(t){this._url=t,this.subscriptions=new T(this),this.connection=new C(this),this.subprotocols=[]}get url(){return E(this._url)}send(t){return this.connection.send(t)}connect(){return this.connection.open()}disconnect(){return this.connection.close({allowReconnect:!1})}ensureActiveConnection(){if(!this.connection.isActive())return this.connection.open()}addSubProtocol(t){this.subprotocols=[...this.subprotocols,t]}}function E(t){if("function"==typeof t&&(t=t()),t&&!/^wss?:/i.test(t)){const e=document.createElement("a");return e.href=t,e.href=e.href,e.protocol=e.protocol.replace("http","ws"),e.href}return t}function P(t){const e=document.head.querySelector(`meta[name='action-cable-${t}']`);if(e)return e.getAttribute("content")}var $=Object.freeze({__proto__:null,Connection:C,ConnectionMonitor:m,Consumer:R,INTERNAL:f,Subscription:k,Subscriptions:T,SubscriptionGuarantor:_,adapters:l,createWebSocketURL:E,logger:d,createConsumer:function(t=P("url")||f.default_mount_path){return new R(t)},getConfig:P});export{u as cable};
//# sourceMappingURL=turbo.min.js.map
